#!/bin/bash

set -eux

# Override TMP_DIR for image build.
# It defaults /tmp. But, /tmp is usually tmpfs mounted on Fedora, and dib will
# use a tmpfs on it's own if there is enough free RAM.
export TMP_DIR=${TMP_DIR:-/var/tmp}

export NODE_ARCH=${NODE_ARCH:-amd64}
export NODE_DIST=${NODE_DIST:-"fedora"}
export DEPLOY_IMAGE_ELEMENT=${DEPLOY_IMAGE_ELEMENT:-deploy-baremetal}
export DEPLOY_NAME=${DEPLOY_NAME:-deploy-ramdisk}
export DISCOVERY_IMAGE_ELEMENT=${DISCOVERY_IMAGE_ELEMENT:-discovery-ironic}
export DISCOVERY_NAME=${DISCOVERY_NAME:-discovery-ramdisk}

export ELEMENTS_PATH=${ELEMENTS_PATH:-"/usr/share/tripleo-image-elements:/usr/share/instack-undercloud"}

export DEPLOY_DIB_EXTRA_ARGS=${DEPLOY_DIB_EXTRA_ARGS:-"\
undercloud-package-install"}

export OVERCLOUD_CONTROL_DIB_EXTRA_ARGS=${OVERCLOUD_CONTROL_DIB_EXTRA_ARGS:-"\
pip-cache boot-stack cinder-api os-collect-config \
neutron-network-node dhcp-all-interfaces stackuser swift-proxy swift-storage \
baremetal \
cinder-lio \
cinder-volume-nfs \
fedora-rdo-icehouse-repository \
horizon \
rabbitmq-server \
keystone-1289935 \
mariadb-rdo \
stable-interface-names \
os-refresh-config-reboot \
undercloud-package-install"}

export OVERCLOUD_COMPUTE_DIB_EXTRA_ARGS=${OVERCLOUD_COMPUTE_DIB_EXTRA_ARGS:-"\
pip-cache \
nova-compute \
nova-kvm \
neutron-openvswitch-agent \
nfs-utils \
os-collect-config \
baremetal \
dhcp-all-interfaces \
stackuser \
fedora-rdo-icehouse-repository \
stable-interface-names \
os-refresh-config-reboot \
undercloud-package-install"}

export OVERCLOUD_CINDER_DIB_EXTRA_ARGS=${OVERCLOUD_CINDER_DIB_EXTRA_ARGS:-"\
pip-cache \
neutron-openvswitch-agent \
os-collect-config \
baremetal \
cinder-lio \
cinder-volume-nfs \
dhcp-all-interfaces \
stackuser \
fedora-rdo-icehouse-repository \
stable-interface-names \
os-refresh-config-reboot \
undercloud-package-install \
"}

export OVERCLOUD_SWIFT_DIB_EXTRA_ARGS=${OVERCLOUD_SWIFT_DIB_EXTRA_ARGS:-"\
pip-cache \
swift-storage \
neutron-openvswitch-agent \
os-collect-config \
baremetal \
dhcp-all-interfaces \
stackuser \
fedora-rdo-icehouse-repository \
stable-interface-names \
os-refresh-config-reboot \
undercloud-package-install \
"}

if [ ! -f $DEPLOY_NAME.initramfs -o \
     ! -f $DEPLOY_NAME.kernel ]; then
    ramdisk-image-create \
        -a $NODE_ARCH \
        -o $DEPLOY_NAME \
        $NODE_DIST $DEPLOY_IMAGE_ELEMENT \
        $DEPLOY_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-deploy.log
fi

if [ ! -f $DISCOVERY_NAME.initramfs -o \
     ! -f $DISCOVERY_NAME.kernel ]; then
    ramdisk-image-create \
        -a $NODE_ARCH \
        -o $DISCOVERY_NAME \
        $NODE_DIST $DISCOVERY_IMAGE_ELEMENT \
        $DISCOVERY_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-discovery.log
fi

if [ ! -f overcloud-control.qcow2 ]; then
    disk-image-create \
        -a $NODE_ARCH \
        -o overcloud-control \
        $NODE_DIST \
        $OVERCLOUD_CONTROL_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-overcloud-control.log
fi

if [ ! -f overcloud-compute.qcow2 ]; then
    disk-image-create \
        -a $NODE_ARCH \
        -o overcloud-compute \
        $NODE_DIST  \
        $OVERCLOUD_COMPUTE_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-overcloud-compute.log
fi

if [ ! -f overcloud-cinder-volume.qcow2 ]; then
    disk-image-create \
        -a $NODE_ARCH \
        -o overcloud-cinder-volume \
        $NODE_DIST \
        $OVERCLOUD_CINDER_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-overcloud-cinder-volume.log
fi

if [ ! -f overcloud-swift-storage.qcow2 ]; then
    disk-image-create \
        -a $NODE_ARCH \
        -o overcloud-swift-storage \
        $NODE_DIST \
        $OVERCLOUD_SWIFT_DIB_EXTRA_ARGS \
        $DIB_COMMON_ELEMENTS \
        2>&1 | tee dib-overcloud-swift-storage.log
fi

if [ ! -f fedora-user.qcow2 ]; then
    # Just copy the already downloaded Fedora cloud image as fedora-user.qcow2
    cp ~/.cache/image-create/fedora-20.x86_64.qcow2 fedora-user.qcow2
fi
