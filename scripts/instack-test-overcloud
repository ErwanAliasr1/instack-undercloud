#!/bin/bash

set -eux

if [ -d /etc/tripleo ]; then
    TRIPLEO_ROOT=/etc/tripleo
else
    TRIPLEO_ROOT=/opt/stack/tripleo-incubator
fi

source /etc/sysconfig/stackrc

source tripleo-overcloud-passwords

export OVERCLOUD_IP=$(nova list | grep notCompute0.*ctlplane | sed  -e "s/.*=\\([0-9.]*\\).*/\1/")

source $TRIPLEO_ROOT/overcloudrc

export no_proxy=${no_proxy:-""}
export no_proxy=$no_proxy,$OVERCLOUD_IP

tripleo os-adduser -p $OVERCLOUD_DEMO_PASSWORD demo demo@example.com

glance image-create --name user --public --disk-format qcow2 \
    --container-format bare --file fedora-user.qcow2

tripleo wait_for 30 10 nova service-list --binary nova-compute 2\>/dev/null \| grep 'enabled.*\ up\ '

tripleo wait_for 30 10 neutron agent-list -f csv -c alive -c agent_type -c host \| grep "\":-).*Open vSwitch agent.*overcloud-novacompute\""

# source $TRIPLEO_ROOT/overcloudrc-user

NET_ID=$(neutron net-list -f csv --quote none | grep default-net | cut -d, -f1)

tripleo user-config

nova boot --key-name default --flavor m1.tiny --image user --nic net-id=$NET_ID demo

tripleo wait_for 10 5 neutron port-list -f csv -c id --quote none \| grep id
PORT=$(neutron port-list -f csv -c id --quote none | tail -n1)
FLOATINGIP=$(neutron floatingip-create ext-net --port-id "${PORT//[[:space:]]/}" | awk '$2=="floating_ip_address" {print $4}')

SECGROUPID=$(neutron security-group-list -f csv --quote none | grep default | head -n 1 | cut -d, -f1)
neutron security-group-rule-create $SECGROUPID --protocol icmp \
    --direction ingress --port-range-min 8 --port-range-max 8
neutron security-group-rule-create $SECGROUPID --protocol tcp \
    --direction ingress --port-range-min 22 --port-range-max 22

tripleo wait_for 30 10 ping -c 1 $FLOATINGIP

TEST_CINDER=${TEST_CINDER:-""}

if [ -z "$TEST_CINDER" ]; then
    echo Not testing cinder.
    exit 0
fi

tripleo wait_for 10 10 nova list \| grep ACTIVE

CINDER_VOLUME_ID=$(cinder create 1 | grep " id " | awk '{print $4}')

nova volume-attach demo $CINDER_VOLUME_ID

ssh-keygen -R $FLOATINGIP
tripleo wait_for 30 10 ssh -o StrictHostKeyChecking=no fedora@$FLOATINGIP ls /dev/vdb

ssh -tt fedora@$FLOATINGIP sudo fdisk /dev/vdb <<EOF
o
w
EOF

ssh -tt fedora@$FLOATINGIP sudo fdisk /dev/vdb <<EOF
n
p
1


w
EOF

ssh -tt fedora@$FLOATINGIP sudo mkfs.ext4 /dev/vdb1

ssh -tt fedora@$FLOATINGIP sudo mount /dev/vdb1 /mnt
ssh -tt fedora@$FLOATINGIP sudo umount /mnt
